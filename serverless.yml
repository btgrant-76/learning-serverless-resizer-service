# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: learning-serverless-resizer-service

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  profile: student1
  region: us-east-2 # Ohio

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:GetObject"
        - "s3:PutObject"
      Resource: "arn:aws:s3:::learning-serverless-resizer-service-images-12-01/*"
    - Effect: "Allow"
      Action:
        - "states:ListStateMachines"
        - "states:StartExecution"
      Resource: "arn:aws:states:*:*:*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  executeStepFunction:
    handler: handler.executeStepFunction
    events:
      - s3:
          bucket: learning-serverless-resizer-service-images-12-01
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/
            - suffix: .jpg
  resizer:
    handler: handler.resizer
  saveImageMetadata:
    handler: handler.saveImageMetadata
  thumbnailListener:
    handler:  handler.thumbnailListener
    events:
      - s3:
          bucket: learning-serverless-resizer-service-images-12-01
          event: s3:ObjectCreated:*
          rules:
            - prefix: thumbnails/
            - suffix: .jpg

# requires the step function plugin
stepFunctions:
  stateMachines:
    imageProcessingMachine: # name of the state machine
      definition:
        Comment: "Image processing state machine"
        StartAt: Parallel # First state
        States:
          Parallel: # name of the first state
            Type: Parallel # type of the state
            Next: FinalState
            Branches: # two, parallel branch Tasks
              - StartAt:  ResizeImage
                States:
                  ResizeImage:
                    Type: Task # each Branch has one Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage, 'dev'}-resizer # the mustache segments are supported through the pseudo-parameters plugin
                    End: true
              - StartAt:  SaveImageMetaData
                States:
                  SaveImageMetaData:
                    Type: Task
                    Resource: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage, 'dev'}-saveImageMetadata # the last bit is the name of a function defined above
                    End: true
          FinalState: # the name of the final state is FinalState
            Type: Pass
            End: true

